/**
 * MIT License
 *
 * Copyright (c) 2017
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Application build script
 *
 * Standard compile & test
 *
 * ./gradlew clean build test
 *
 */

buildscript {
    // These are for the build, not the application
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

description = "So You Want To Write A Microservice"

apply plugin: 'docker'

// various global project settings
allprojects {
    group = projectGroup

    apply plugin: 'java'

    // set the java version
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

subprojects {


// repos to find components in
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
}

build.dependsOn project(':app').tasks.build

// repos to find components in
repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

// manually build a docker container
//
// ant taskdef for simple component to identify the operating system being used
import org.apache.tools.ant.taskdefs.condition.Os
task buildDocker(type: Exec) {
    doFirst {
        copy {
            from "app/build/libs"
            into "build/docker/"
            include "*BOOT.jar"
        }
        copy {
            from "."
            into "build/docker/"
            include "Dockerfile"
        }
    }
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'docker', 'build', '-f', 'build/docker/Dockerfile', '-t', 'sywtwam', 'build/docker/'
    } else {
        commandLine 'docker', 'build', '-f', 'build/docker/Dockerfile', '-t', 'sywtwam', 'build/docker/'
    }
}

// ... and finally,  the gradle version to use
task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

