buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }

}

import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.detoeuf.swagger-codegen' version '1.6.3'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'maven-publish'
apply plugin: 'docker'
apply plugin: 'application'
apply plugin: 'org.detoeuf.swagger-codegen'


sourceCompatibility = javaVersion
targetCompatibility = javaVersion


group = projectGroup

task setVersion {
    if (System.env.BUILD_NUMBER) {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + System.env.BUILD_NUMBER + '-SNAPSHOT'
    } else {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + projectVersionBuild + '-SNAPSHOT'
    }
}

jar {
    dependsOn setVersion
    baseName = projectName
    manifest
            {
                attributes 'Implementation-Title': projectName,
                        'Implementation-Version': version,
                        'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            }
}


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
}

publishToMavenLocal {
    dependsOn build
}


jacoco {
    toolVersion = "0.7+"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
    dependsOn javadoc
    maxParallelForks = 1
    filter
            {
                includeTestsMatching "com.codingrodent.microservice.template.*"
            }
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}


findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    effort = "max"
    reportLevel = "high"
    findbugsTest.enabled = false
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

task buildDocker(type: Exec) {
    doFirst {
        copy {
            from "build/libs"
            into "build/docker/"
            include "*.jar"
        }
        copy {
            from "."
            into "build/docker/"
            include "Dockerfile"
        }
    }
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'docker', 'build', '-f', 'build/docker/Dockerfile', '-t', 'codesqueak', 'build/docker/'
    } else {
        commandLine 'docker', 'build', '-f', 'build/docker/Dockerfile', '-t', 'codesqueak', 'build/docker/'
    }
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

check {
    dependsOn jacocoTestReport
}

sourceSets {
    swagger {
        java {
            srcDir file("${project.buildDir.path}/src/main/java/com/codingrodent/microservice/template/controller")
        }
    }
}


swagger {
//    inputSpec = 'http://petstore.swagger.io/v2/swagger.json'
//    outputDir = 'build/swagger'
//    lang = 'spring-mvc'

//    additionalProperties = [
//            'invokerPackage'   : 'io.swagger.petstore.client.jersey1',
//            'modelPackage'     : 'io.swagger.petstore.client.jersey1.model',
//            'apiPackage'       : 'io.swagger.petstore.client.jersey1.api',
//            'dateLibrary'      : 'java8'
//    ]
//    systemProperties = [
//            'apis' : '',
//            'models' = ''
//    ]
}








// In this section you declare the dependencies for your production and test code
dependencies {
    // Spring boot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.4.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: '1.4.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.4.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '1.4.3.RELEASE'
    // Cloud extensions
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: '1.1.7.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-commons', version: '1.1.7.RELEASE'
    // Consul / Discovery
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '1.1.2.RELEASE'
    // Lots of netflix goodies
    compile group: 'org.springframework.cloud', name: 'spring-cloud-netflix-core', version: '1.2.4.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: '1.2.4.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard', version: '1.2.4.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.retry/spring-retry
    compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.0.RELEASE'
    // Spring data for couchbase
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.0.0.M1'
    compile group: 'org.springframework.data', name: 'spring-data-couchbase', version: '3.0.0.M1'
    // Spring hateoas support
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.23.0.RELEASE'
    // Springfox swagger documentation tools
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-bean-validators', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-data-rest', version: '2.6.1'
    //  Support for JSR 330: Dependency Injection for Java (pref to autowire - ymmv)
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    // Java / json twiddling
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.6'
    // Lots of observable goodies
    compile group: 'io.reactivex', name: 'rxjava', version: '1.2.5'
    // Couchbase client side driver
    compile group: 'com.couchbase.client', name: 'java-client', version: '2.4.0'
    // Subprojects
    compile project(':subproj1')
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

